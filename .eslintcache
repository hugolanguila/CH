[{"/home/hh/Desktop/Crypto/hibrido/src/index.js":"1","/home/hh/Desktop/Crypto/hibrido/src/Hibrido.js":"2","/home/hh/Desktop/Crypto/hibrido/src/Cifrar.js":"3","/home/hh/Desktop/Crypto/hibrido/src/hooks/useForm.js":"4","/home/hh/Desktop/Crypto/hibrido/src/hooks/useFetch.js":"5","/home/hh/Desktop/Crypto/hibrido/src/Decifrar.js":"6"},{"size":158,"mtime":1611561611331,"results":"7","hashOfConfig":"8"},{"size":332,"mtime":1611564104442,"results":"9","hashOfConfig":"8"},{"size":2788,"mtime":1611566215643,"results":"10","hashOfConfig":"8"},{"size":343,"mtime":1610692198224,"results":"11","hashOfConfig":"8"},{"size":726,"mtime":1610692198224,"results":"12","hashOfConfig":"8"},{"size":3107,"mtime":1611614515422,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"pi6uah",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/hh/Desktop/Crypto/hibrido/src/index.js",[],["30","31"],"/home/hh/Desktop/Crypto/hibrido/src/Hibrido.js",[],"/home/hh/Desktop/Crypto/hibrido/src/Cifrar.js",["32","33","34"],"import React, { useState }from 'react';\n\nimport { useForm } from './hooks/useForm';\nimport { useFetch } from './hooks/useFetch';\n\n\nexport const Cifrar= () =>{\n\n\tconst [ { mensaje, password, pubkey, privkey }, handleInputChange, reset ] = \n\t\t\t\t\t\tuseForm({mensaje:'', password:'', pubkey:'', privkey:''});\n\t\t\t\t\t\t\n\tconst [ formData, setFormData ] = useState({});\n\tconst { data, loading, err } = useFetch('https://hugo-hr.herokuapp.com/cifradorhibrido', formData );\n\n\tconst handleSubmit = (e) =>{\n\t\te.preventDefault();\n\t\tif( mensaje.length > 1 && password.length > 1){\n\t\t\tconst body = new FormData();\n\t\t\tbody.append( 'mensaje', mensaje );\n\t\t\tbody.append( 'password', mensaje );\n\t\t\tbody.append( 'publickey', pubkey );\n\t\t\tbody.append( 'privatekey', privkey );\n\t\t\tsetFormData({\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody\n\t\t\t});\t\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label for=\"mensaje\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tMensaje a cifrar\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"mensaje\" \n\t\t\t\t\t\tname=\"mensaje\"\n\t\t\t\t\t\tvalue={ mensaje }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label for=\"password\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSecreto\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"password\" \n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\tfor=\"pubkey\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Publica\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"publickey\" \n\t\t\t\t\t\tname=\"pubkey\"\n\t\t\t\t\t\tvalue={ pubkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave publica del receptor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\tfor=\"privkey\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Privada\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"privkey\" \n\t\t\t\t\t\tname=\"privkey\"\n\t\t\t\t\t\tvalue={ privkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave privada del emisor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Cifrar mensaje\"/ >\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t\n\t\t\t{\n\t\t\t\tdata &&\n\t\t\t\t<blockquote className=\"blockquote mt-2 mb-1\">\n\t\t\t\t\t<h5 className=\"\">Texto Cifrado</h5>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t{ data?.mensajeCifrado }\n\t\t\t\t\t</p>\n\t\t\t\t\t<h5 className=\"\">Llave cifrada</h5>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t{ data?.llaveCifrada }\n\t\t\t\t\t</p>\n\t\t\t\t\t<h5 className=\"\">Firma</h5>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t{ data?.firma }\n\t\t\t\t\t</p>\n\t\t\t\t</blockquote>\n\t\t\t}\n\t\t</>\n\t);\n};\n","/home/hh/Desktop/Crypto/hibrido/src/hooks/useForm.js",[],"/home/hh/Desktop/Crypto/hibrido/src/hooks/useFetch.js",["35"],"import { useState, useEffect, useRef } from 'react';\n\nexport const useFetch = ( url, formData ) =>{\n\n\tconst isMounted = useRef( true );\n\tconst [ state, setState ] = useState({ data: null, loading: true, err: null });\n\n\tuseEffect( () => {\n\t\treturn () => {\n\t\t\tisMounted.current = false ;\n\t\t}\n\t}, []);\n\n\tuseEffect( () => {\n\t\tsetState({ data: null, loading: true, error: null});\n\t\tif( formData !== {} ){\n\t\t\tfetch( url, formData )\n\t\t\t\t.then( resp => resp.json() )\n\t\t\t\t.then( data => {\n\t\t\t\t\tif( isMounted.current )\n\t\t\t\t\t\tsetState( { loading: false, error: null, data } );\n\t\t\t\t})\n\t\t\t\t.catch( () => {\t\n\t\t\t\t\tsetState({ data: null, loading: false, error: 'No se pudo cargar la info' })\n\t\t\t\t});\n\t\t}\t\n\t}, [ formData ]);\n\n\treturn state;\n}\n","/home/hh/Desktop/Crypto/hibrido/src/Decifrar.js",["36","37","38"],"import React, { useState }from 'react';\n\nimport { useForm } from './hooks/useForm';\nimport { useFetch } from './hooks/useFetch';\n\n\nexport const Decifrar= () =>{\n\n\tconst [ { mensaje, password, pubkey, privkey, firma }, handleInputChange, reset ] = \n\t\t\t\t\t\tuseForm({mensaje:'', password:'', pubkey:'', privkey:'', firma:''});\n\t\t\t\t\t\t\n\tconst [ formData, setFormData ] = useState({});\n\tconst { data, loading, err } = useFetch('https://hugo-hr.herokuapp.com/decifradorhibrido', formData );\n\n\tconst handleSubmit = (e) =>{\n\t\te.preventDefault();\n\t\tif( mensaje.length > 1 && password.length > 1){\n\t\t\tconst body = new FormData();\n\t\t\tbody.append( 'mensaje', mensaje );\n\t\t\tbody.append( 'password', password );\n\t\t\tbody.append( 'publickey', pubkey );\n\t\t\tbody.append( 'privatekey', privkey );\n\t\t\tbody.append( 'firma', firma );\n\t\t\tsetFormData({\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody\n\t\t\t});\t\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label for=\"mensaje\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tMensaje a decifrar\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"mensaje\" \n\t\t\t\t\t\tname=\"mensaje\"\n\t\t\t\t\t\tvalue={ mensaje }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label for=\"password\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSecreto cifrado\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"password\" \n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\tfor=\"pubkey\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Publica\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"publickey\" \n\t\t\t\t\t\tname=\"pubkey\"\n\t\t\t\t\t\tvalue={ pubkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave publica del emisor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\tfor=\"privkey\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Privada\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"privkey\" \n\t\t\t\t\t\tname=\"privkey\"\n\t\t\t\t\t\tvalue={ privkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave privada del receptor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\tfor=\"firma\" \n\t\t\t\t\t\tclass=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tFirma del mensaje\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclass=\"form-control\" \n\t\t\t\t\t\tid=\"firma\" \n\t\t\t\t\t\tname=\"firma\"\n\t\t\t\t\t\tvalue={ firma }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Firma del mensaje\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Decifrar mensaje\"/ >\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t\n\t\t\t{\n\t\t\t\tdata &&\n\t\t\t\t<blockquote className=\"blockquote mt-2 mb-1\">\n\t\t\t\t\t<h5 className=\"\">Mensaje decifrado</h5>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t{ data?.mensaje }\n\t\t\t\t\t</p>\n\t\t\t\t\t<h5 className=\"\">Informacion del mensaje</h5>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t{ data?.info }\n\t\t\t\t\t</p>\n\n\t\t\t\t</blockquote>\n\t\t\t}\n\t\t</>\n\t);\n};\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":69,"nodeType":"45","messageId":"46","endLine":9,"endColumn":74},{"ruleId":"43","severity":1,"message":"47","line":13,"column":16,"nodeType":"45","messageId":"46","endLine":13,"endColumn":23},{"ruleId":"43","severity":1,"message":"48","line":13,"column":25,"nodeType":"45","messageId":"46","endLine":13,"endColumn":28},{"ruleId":"49","severity":1,"message":"50","line":27,"column":5,"nodeType":"51","endLine":27,"endColumn":17,"suggestions":"52"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":76,"nodeType":"45","messageId":"46","endLine":9,"endColumn":81},{"ruleId":"43","severity":1,"message":"47","line":13,"column":16,"nodeType":"45","messageId":"46","endLine":13,"endColumn":23},{"ruleId":"43","severity":1,"message":"48","line":13,"column":25,"nodeType":"45","messageId":"46","endLine":13,"endColumn":28},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [formData, url]",{"range":"58","text":"59"},[693,705],"[formData, url]"]