{"version":3,"sources":["hooks/useForm.js","helpers/hibrido.js","AuxComponent.js","Cifrar.js","AuxComponentD.js","Decifrar.js","Hibrido.js","index.js"],"names":["useForm","initialState","useState","values","setValues","handleChange","target","name","value","reset","cifradorhibrido","mensaje","password","publickey","privatekey","servicio","serv","a","urlbase","body","FormData","append","fetch","method","resp","blob","fileSaver","saveAs","json","data","decifradorhibrido","firma","AuxComponent","Serv0","className","mensajeCifrado","llaveCifrada","Serv1","Serv2","Cifrar","pubkey","privkey","handleInputChange","setServ","setServicio","setData","handleSubmit","e","preventDefault","newData","ok","window","alert","onSubmit","htmlFor","type","id","onChange","placeholder","rows","aria-label","selected","AuxComponentD","info","mensajeDecifrado","resultado","message","Decifrar","Hibrido","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f28afb9.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) =>{\n\n\tconst [ values, setValues ] = useState( initialState );\n\t\n\tconst handleChange = ({ target }) =>{\n\t\tsetValues({...values, [ target.name ]: target.value });\n\t}\n\n\tconst reset = () =>{\n\t\tsetValues( initialState );\n\t}\n\n\treturn [ values, handleChange, reset ];\n}\n","import fileSaver from 'file-saver';\nexport const cifradorhibrido = async ( mensaje, password, publickey, privatekey, servicio, serv ) =>{\n\t\n\tconst urlbase = `https://hugo-hr.herokuapp.com/${serv}`;\n\t\n\tconst body = new FormData();\n\tbody.append( 'mensaje', mensaje );\n\tbody.append( 'password', mensaje );\n\tbody.append( 'publickey', publickey );\n\tbody.append( 'privatekey', privatekey );\n\t\n\tconst resp = await fetch( urlbase, {method:'POST', body } );\n\tif( servicio === 0) {\n\t\tlet blob = await resp.blob();\n\t\tfileSaver.saveAs( blob, 'resultado.txt' );\n\t}else{\n\t\tconst data = await resp.json();\n\t\treturn data;\n\t}\n}\n\nexport const decifradorhibrido = async ( mensaje, password, publickey, privatekey, firma, servicio ) =>{\n\t\n\tconst urlbase = `https://hugo-hr.herokuapp.com/${servicio}`;\n\t\n\tconst body = new FormData();\n\tbody.append( 'mensaje', mensaje );\n\tbody.append( 'password', password );\n\tbody.append( 'publickey', publickey );\n\tbody.append( 'privatekey', privatekey );\n\tbody.append('firma', firma );\n\t\n\tconst resp = await fetch( urlbase, {method:'POST', body } );\n\tconst data = await resp.json();\n\t\n\treturn data;\n}\n","import React from 'react';\n\nexport const AuxComponent = ({ data, servicio, mensaje }) =>{\n\t\n\tlet Serv0 = (\t<>\n\t\t\t\t<h5 className=\"\">Mensaje Cifrado</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.mensajeCifrado }\n\t\t\t\t</p>\n\t\t\t\t<h5 className=\"\">Llave cifrada</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.llaveCifrada }\n\t\t\t\t</p>\n\t\t\t\t<h5 className=\"\">Firma</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.firma }\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t\t\n\tlet Serv1 = (\t<>\n\t\t\t\t<h5 className=\"\">Mensaje cifrado</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.mensajeCifrado }\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t\t\n\tlet Serv2= (\t<>\n\t\t\t\t<h5 className=\"\">Mensaje</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ mensaje }\n\t\t\t\t</p>\n\t\t\t\t<h5 className=\"\">Firma</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.firma }\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t\t\n\treturn (\n\t\t<>\n\t\t\t<blockquote className=\"blockquote mt-2 mb-1\">\t\t\n\t\t\t\t{\n\t\t\t\t\tservicio==0? Serv0: servicio==1? Serv1: Serv2\n\t\t\t\t}\n\t\t\t</blockquote>\n\t\t</>\n\t);\n}\n","import React, { useState }from 'react';\n\nimport { useForm } from './hooks/useForm';\nimport { cifradorhibrido } from './helpers/hibrido';\nimport { AuxComponent } from './AuxComponent';\n\nexport const Cifrar= () =>{\n\n\tconst [ { mensaje, password, pubkey, privkey }, handleInputChange ] = \n\t\t\t\t\t\tuseForm({\n\t\t\t\t\t\t\tmensaje:'', \n\t\t\t\t\t\t\tpassword:'', \n\t\t\t\t\t\t\tpubkey:'', \n\t\t\t\t\t\t\tprivkey:''\n\t\t\t\t\t\t});\n\t\n\tconst [ serv, setServ ]= useState('cifradorhibrido');\n\tconst [ servicio, setServicio ] =  useState(0);\n\tconst [ data, setData ] = useState();\n\t\n\tconst handleChangeService = (e) =>{\n\t\te.preventDefault();\n\t\tsetServicio(e.target.value);\n\t\tif(e.target.value == 0){\n\t\t\tsetServ('cifradorhibrido');\n\t\t}else if( e.target.value == 1){\n\t\t\tsetServ('cifraraes');\n\t\t}else if(e.target.value == 2){\n\t\t\tsetServ('firmar');\n\t\t}\t\t\n\t}\n\n\tconst handleSubmit = async(e) =>{\n\t\te.preventDefault();\n\t\tif( servicio === 0 ){\n\t\t\tawait cifradorhibrido( mensaje, password, pubkey, privkey, servicio, serv);\n\t\t}else{\n\t\t\tlet newData = await cifradorhibrido( mensaje, password, pubkey, privkey, servicio, serv);\n\t\t\tif( newData.ok ){\n\t\t\t\tsetData( newData );\n\t\t\t}else{\n\t\t\t\twindow.alert('No se pudo realizar la operacion que solicitaste');\n\t\t\t}\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor=\"mensaje\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tMensaje a cifrar\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"mensaje\" \n\t\t\t\t\t\tname=\"mensaje\"\n\t\t\t\t\t\tvalue={ mensaje }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor=\"password\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave AES\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"password\" \n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\thtmlFor=\"pubkey\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Publica\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"publickey\" \n\t\t\t\t\t\tname=\"pubkey\"\n\t\t\t\t\t\tvalue={ pubkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave publica del receptor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\thtmlFor=\"privkey\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Privada\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"privkey\" \n\t\t\t\t\t\tname=\"privkey\"\n\t\t\t\t\t\tvalue={ privkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave privada del emisor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<select \n\t\t\t\t\tclassName=\"form-select mb-3\" \n\t\t\t\t\taria-label=\"Default select example\"\n\t\t\t\t\tonChange={ handleChangeService }\n\t\t\t\t\tselected={servicio}\n\t\t\t\t>\n  \t\t\t\t\t<option value=\"0\">Todos los servicios</option>\n\t\t\t\t\t<option value=\"1\">Confidencialidad</option>\n\t\t\t\t\t<option value=\"2\">Autenticacion</option>\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Cifrar mensaje\"/ >\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t\n\t\t\t{\n\t\t\t\t\tdata && <AuxComponent servicio={servicio} data={data} mensaje={mensaje}/>\t\n\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t</>\n\t);\n};\n","import React from 'react';\n\nexport const AuxComponentD = ({ data, servicio }) =>{\n\t\n\tlet Serv0 = (\t<>\n\t\t\t\t<h5 className=\"\">Mensaje Decifrado</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.mensaje}\n\t\t\t\t</p>\n\t\t\t\t<h5 className=\"\">Informacion de la firma</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.info }\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t\t\n\tlet Serv1 = (\t<>\n\t\t\t\t<h5 className=\"\">Mensaje cifrado</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.mensajeDecifrado }\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\n\tlet Serv2= (\t<>\n\t\t\t\t<h5 className=\"\">Informacion de la Firma</h5>\n\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t{ data?.resultado?.message }\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t\t\n\treturn (\n\t\t<>\n\t\t\t<blockquote className=\"blockquote mt-2 mb-1\">\t\t\n\t\t\t\t{\n\t\t\t\t\tservicio==0? Serv0: servicio == 1? Serv1: Serv2\n\t\t\t\t}\n\t\t\t</blockquote>\n\t\t</>\n\t);\n}\n","import React, { useState }from 'react';\n\nimport { useForm } from './hooks/useForm';\nimport { decifradorhibrido } from './helpers/hibrido';\nimport { AuxComponentD } from './AuxComponentD';\n\n\nexport const Decifrar= () =>{\n\n\tconst [ { mensaje, password, pubkey, privkey, firma }, handleInputChange,  ] = \n\t\t\t\t\t\tuseForm({\n\t\t\t\t\t\t\tmensaje:'', \n\t\t\t\t\t\t\tpassword:'', \n\t\t\t\t\t\t\tpubkey:'', \n\t\t\t\t\t\t\tprivkey:'', \n\t\t\t\t\t\t\tfirma:''\n\t\t\t\t\t\t});\n\tconst [ serv, setServ ]= useState('decifradorhibrido');\n\tconst [ data, setData ] = useState();\t\t\t\t\t\n\tconst [ servicio, setServicio ] =  useState(0);\n\t\n\tconst handleChangeService = (e) =>{\n\t\te.preventDefault();\n\t\tsetServicio(e.target.value);\n\t\tif(e.target.value == 0){\n\t\t\tsetServ('decifradorhibrido');\n\t\t}else if( e.target.value == 1){\n\t\t\tsetServ('decifraraes');\n\t\t}else if(e.target.value == 2){\n\t\t\tsetServ('verificar');\n\t\t}\t\t\n\t}\n\n\tconst handleSubmit = async(e) =>{\n\t\te.preventDefault();\n\t\tlet newData = await decifradorhibrido( mensaje, password, pubkey, privkey, firma, serv );\n\t\tif( newData.ok ){\n\t\t\tsetData( newData );\n\t\t}else{\n\t\t\twindow.alert('No se pudo realizar la operacion que solicitaste');\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={ handleSubmit }>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor=\"mensaje\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tMensaje a verificar/decifrar\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"mensaje\" \n\t\t\t\t\t\tname=\"mensaje\"\n\t\t\t\t\t\tvalue={ mensaje }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor=\"password\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave AES cifrada.\n\t\t\t\t\t</label>\n\t  \t\t\t\t<input  \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"password\" \n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\thtmlFor=\"pubkey\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Publica\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"publickey\" \n\t\t\t\t\t\tname=\"pubkey\"\n\t\t\t\t\t\tvalue={ pubkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave publica del emisor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\thtmlFor=\"privkey\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLlave Privada\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"privkey\" \n\t\t\t\t\t\tname=\"privkey\"\n\t\t\t\t\t\tvalue={ privkey }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Llave privada del receptor\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label \n\t\t\t\t\t\thtmlFor=\"firma\" \n\t\t\t\t\t\tclassName=\"form-label\"\n\t\t\t\t\t>\n\t\t\t\t\t\tFirma del mensaje\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"firma\" \n\t\t\t\t\t\tname=\"firma\"\n\t\t\t\t\t\tvalue={ firma }\n\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\tplaceholder=\"Firma del mensaje\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<select \n\t\t\t\t\tclassName=\"form-select mb-3\" \n\t\t\t\t\taria-label=\"Default select example\"\n\t\t\t\t\tonChange={ handleChangeService }\n\t\t\t\t\tselected={servicio}\n\t\t\t\t>\n  \t\t\t\t\t<option value=\"0\">Verificar todos los servicios</option>\n  \t\t\t\t\t<option value=\"1\">Confidencialidad</option>\n\t\t\t\t\t<option value=\"2\">Verificar Autenticacion</option>\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<input type=\"submit\" className=\"btn btn-danger\" value=\"Verificar/Decifrar mensaje\"/ >\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</form>\n\t\t\t\n\t\t\t{\n\t\t\t\t\tdata && <AuxComponentD servicio={servicio} data={data} />\t\n\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { Cifrar } from './Cifrar';\nimport { Decifrar } from './Decifrar';\n\nconst Hibrido = () =>{\n  return (\n    \t<div className=\"container\">\n\t\t<section className=\"mb-5\">\n\t\t\t<Cifrar />\n\t\t</section>\n\t\t<hr/>\n\t\t<section className=\"mt-5\">\n\t\t\t<Decifrar />\n\t\t</section>\n\t</div>\n  );\n};\n\nexport default Hibrido;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Hibrido from './Hibrido';\n\nReactDOM.render(<Hibrido />, document.getElementById('root'));\n"],"sourceRoot":""}